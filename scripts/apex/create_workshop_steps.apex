// Create Workshop Steps for "Supercharge Experiences: Connect Telemetry to CRM360"
// Workshop ID: a01Ka00000T4v4zIAB

List<Workshop_Step__c> steps = new List<Workshop_Step__c>();

// Step 1: Context Service Configuration Guide
steps.add(new Workshop_Step__c(
    Name = 'Context Service Configuration Guide',
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 1,
    Instructions__c = 'Guided steps to create and extend a context service definition for connected vehicles or Assets. This foundational section introduces the workshop objectives and provides overview of the hands-on Connected Assets and Asset Centric Service experience.',
    Step_Group__c = 'Setup'
));

// Step 2: Cloning an existing definition  
steps.add(new Workshop_Step__c(
    Name = 'Cloning an existing definition',
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 2,
    Instructions__c = 'Get off to a fast start by cloning an Out of the Box context definition. Steps include: 1) Navigate to Context Definitions in Setup, 2) Clone VehicleFaultEventDetail from Standard Definitions, 3) Create custom definition named "Initials_Asset_Context_Def", 4) Save the cloned definition for customization.',
    Step_Group__c = 'Configuration'
));

// Step 3: Context Service Customization
steps.add(new Workshop_Step__c(
    Name = 'Context Service Customization',
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 3,
    Instructions__c = 'Configure the new context definition for Assets. Edit the cloned Context Definition to align to connected asset event stream. Navigate to Custom Definitions, edit the definition, and modify the structure by adding new child nodes under the signals node, specifically creating a "thresholds" node.',
    Step_Group__c = 'Configuration'
));

// Step 4: Context Definition Attributes
steps.add(new Workshop_Step__c(
    Name = 'Context Definition Attributes', 
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 4,
    Instructions__c = 'Attributes are fields on a node that can be mapped to sObjects or any input data source. Rename attributes from vehicle-focused to asset-focused by changing "vehicleName" to "assetName" and "vehicleId" to "assetId". Add new attributes to the thresholds node including "lower" and "upper" attributes with Number data type.',
    Step_Group__c = 'Configuration'
));

// Step 5: Context Definition Tagging
steps.add(new Workshop_Step__c(
    Name = 'Context Definition Tagging',
    Workshop__c = 'a01Ka00000T4v4zIAB', 
    Step_Order__c = 5,
    Instructions__c = 'Tags are used to define the context structure and point to a node or attribute so the consuming application can query data directly from the context definition. Add tags for assetId and assetName to the Events node, remove old vehicle tags, and add tags to the thresholds node and its lower and upper attributes.',
    Step_Group__c = 'Configuration'
));

// Step 6: Context Definition Mapping
steps.add(new Workshop_Step__c(
    Name = 'Context Definition Mapping',
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 6, 
    Instructions__c = 'Context Mapping is the mapping of nodes and attributes to an input data source. Replace Vehicle mappings with Asset object mappings, map Event node to Asset object, configure assetId and assetName field mappings, update input mappings from vehicleId/vehicleName to assetId/assetName, and generate mappings for the thresholds node.',
    Step_Group__c = 'Configuration'
));

// Step 7: Actionable Event Management
steps.add(new Workshop_Step__c(
    Name = 'Actionable Event Management',
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 7,
    Instructions__c = 'Define the actions to be performed for actionable events generated by assets by creating actionable event orchestrations. Create qualification and evaluation rules for different types of actionable events. Navigate to Actionable Event Management app, create new orchestration "Initials_MYAEO", set up Event Type "WorkshopEvent" and Subtype "WorkshopSubtype", configure Usage type as Automotive/Manufacturing with ExpressionSet-Based execution.',
    Step_Group__c = 'Event Management'
));

// Step 8: Execution Procedures and Expression Sets
steps.add(new Workshop_Step__c(
    Name = 'Execution Procedures and Expression Sets',
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 8,
    Instructions__c = 'Pull variables from the event stream and CRM to define rules and actions. Create list group filters with OR conditions for lower/upper thresholds, set up local resources (alertSubject, isActive, effDateTime, validUntilDateTime), configure Record Action to create RecordAlert with field mappings, set execution rank, and activate the procedure.',
    Step_Group__c = 'Event Management'
));

// Step 9: Testing with Developer Console
steps.add(new Workshop_Step__c(
    Name = 'Testing with Developer Console', 
    Workshop__c = 'a01Ka00000T4v4zIAB',
    Step_Order__c = 9,
    Instructions__c = 'Time to test and see if all the hard work pays off. Navigate to Manufacturing Service Console to get an AssetId, copy the ID from the URL, use Developer Console to execute the test payload with InboundEventService.sendEvent(), and verify that alerts are created successfully on the Asset record.',
    Step_Group__c = 'Testing'
));

// Insert all steps
insert steps;

System.debug('Successfully created ' + steps.size() + ' workshop steps for Supercharge Experiences: Connect Telemetry to CRM360'); 